{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome \u00b6 Purpose of this blog \u00b6 On the one side, I'd like to provide you with helpful insights I collect on the internet. If my blog posts help you, I'm happy! But I'm also trying to get a deeper understanding by writing blog posts for myself. References \u00b6","title":"Welcome"},{"location":"#welcome","text":"","title":"Welcome"},{"location":"#purpose-of-this-blog","text":"On the one side, I'd like to provide you with helpful insights I collect on the internet. If my blog posts help you, I'm happy! But I'm also trying to get a deeper understanding by writing blog posts for myself.","title":"Purpose of this blog"},{"location":"#references","text":"","title":"References"},{"location":"Blog/","text":"Blog Posts \u00b6 Software Enginnering [] 5 Risks That Should Be Avoided in Software Projects Automating Release cycle activities Automate Unit Tests Coverage Reports and Dependency Updates for Your Repositories. Tips for Implementing a Software Release Process Avoid Production Incidents by Considering Production Conditions During Development Improve Code Quality and Git History with Automation tools How to Add Badges to a GitHub Repository How to Use Environment Variables with RSpec Unit Tests Build a Health Check Rack Middleware Kubernetes How to Migrate From Docker Compose to Kubernetes Resource Limits on Kubernetes Helm Chart Wait for All Dependencies Before Starting Kubernetes Pods","title":"Blog Posts"},{"location":"Blog/#blog-posts","text":"Software Enginnering [] 5 Risks That Should Be Avoided in Software Projects Automating Release cycle activities Automate Unit Tests Coverage Reports and Dependency Updates for Your Repositories. Tips for Implementing a Software Release Process Avoid Production Incidents by Considering Production Conditions During Development Improve Code Quality and Git History with Automation tools How to Add Badges to a GitHub Repository How to Use Environment Variables with RSpec Unit Tests Build a Health Check Rack Middleware Kubernetes How to Migrate From Docker Compose to Kubernetes Resource Limits on Kubernetes Helm Chart Wait for All Dependencies Before Starting Kubernetes Pods","title":"Blog Posts"},{"location":"python/Comprehensions/","text":"Comprehensions \u00b6 A simple Health status API Getting Started \u00b6 Install gem # Gemfile gem 'deep_health_check' Add middleware before Rails::Rack::Logger to prevent false positive response if other middleware fails when database is down for example ActiveRecord::QueryCache # config/application.rb config.middleware.insert_after \"Rails::Rack::Logger\", DeepHealthCheck::MiddlewareHealthCheck Protect Health Check endpoints using htauth credentials. \u00b6 Health check middleware expose the following endpoints /health /db_health /tcp_dependencies_health dependencies must follow the below format and can be coonfigured using envioronment varables such as: # TCP_DEPENDENCY_${00..99}=${ip_or_host}:${port} TCP_DEPENDENCY_00=127.0.0.0:8080 /http_dependencies_health dependencies must be valid http url and can be coonfigured using envioronment varables such as: # HTTP_DEPENDENCY_${00..99}=${ip_or_host}:${port} HTTP_DEPENDENCY_00=http://127.0.0.0:8080/health Some of these endpoints provide information about the database and system status. By Default these endpoints are not protected and are accessible publicly. To reduce the security risk introduced by exposing these endpoints, We can protect them using htauth credentials. The following page provide all the necessary steps needed to achieve this task.","title":"Comprehensions"},{"location":"python/Comprehensions/#comprehensions","text":"A simple Health status API","title":"Comprehensions"},{"location":"python/Comprehensions/#getting-started","text":"Install gem # Gemfile gem 'deep_health_check' Add middleware before Rails::Rack::Logger to prevent false positive response if other middleware fails when database is down for example ActiveRecord::QueryCache # config/application.rb config.middleware.insert_after \"Rails::Rack::Logger\", DeepHealthCheck::MiddlewareHealthCheck","title":"Getting Started"},{"location":"python/Comprehensions/#protect-health-check-endpoints-using-htauth-credentials","text":"Health check middleware expose the following endpoints /health /db_health /tcp_dependencies_health dependencies must follow the below format and can be coonfigured using envioronment varables such as: # TCP_DEPENDENCY_${00..99}=${ip_or_host}:${port} TCP_DEPENDENCY_00=127.0.0.0:8080 /http_dependencies_health dependencies must be valid http url and can be coonfigured using envioronment varables such as: # HTTP_DEPENDENCY_${00..99}=${ip_or_host}:${port} HTTP_DEPENDENCY_00=http://127.0.0.0:8080/health Some of these endpoints provide information about the database and system status. By Default these endpoints are not protected and are accessible publicly. To reduce the security risk introduced by exposing these endpoints, We can protect them using htauth credentials. The following page provide all the necessary steps needed to achieve this task.","title":"Protect Health Check endpoints using htauth credentials."}]}